{"version":3,"file":"static/js/4926.68f45947.chunk.js","mappings":"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","sources":["views/dashboard/auth/sign-in.js"],"sourcesContent":["import {Row,Col,Image,Form,Button,ListGroup,} from 'react-bootstrap'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport Card from '../../../components/Card'\r\n\r\n// img\r\nimport facebook    from     '../../../assets/images/brands/fb.svg'\r\nimport google    from     '../../../assets/images/brands/gm.svg'\r\nimport instagram    from     '../../../assets/images/brands/im.svg'\r\nimport linkedin  from     '../../../assets/images/brands/li.svg'\r\nimport auth1 from     '../../../assets/images/auth/01.png'\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { loginRoute } from \"../utils/APIRoutes\";\r\nconst SignIn = () => {\r\n   let history =useHistory()\r\n   const [user, setUser] = useState(\r\n      JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\r\n    );\r\n   const [values, setValues] = useState({ username: \"\", password: \"\" });\r\n   const toastOptions = {\r\n     position: \"bottom-right\",\r\n     autoClose: 8000,\r\n     pauseOnHover: true,\r\n     draggable: true,\r\n     theme: \"dark\",\r\n   };\r\n   useEffect(() => {\r\n      \r\n  if( localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) \r\n       \r\n      toast.info(\"you are already login\")\r\n    }, []);\r\n \r\n   const handleChange = (event) => {\r\n     setValues({ ...values, [event.target.name]: event.target.value });\r\n   };\r\n \r\n   const validateForm = () => {\r\n     const { username, password } = values;\r\n     if (username === \"\") {\r\n       toast.error(\"Email and Password is required.\", toastOptions);\r\n       return false;\r\n     } else if (password === \"\") {\r\n       toast.error(\"Email and Password is required.\", toastOptions);\r\n       return false;\r\n     }\r\n     return true;\r\n   };\r\n \r\n   const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      if (validateForm()) {\r\n        const { username, password } = values;\r\n        const { data } = await axios.post(loginRoute, {\r\n          username,\r\n          password,\r\n        });\r\n        if (data.status === false) {\r\n          toast.error(data.msg, toastOptions);\r\n        }\r\n        if (data.status === true) {\r\n          localStorage.setItem(\r\n            process.env.REACT_APP_LOCALHOST_KEY,\r\n            JSON.stringify(data.user)\r\n          );\r\n  if(username===\"Admin\")\r\n  {\r\n     history.push(\"/\");\r\n  }\r\n  if(username===\"Admin1\")\r\n  {\r\n     history.push(\"/approver\");\r\n  }\r\n  if(username!==\"Admin\" &&username!==\"Admin1\")\r\n  {\r\n     history.push(\"/ath\");\r\n  }\r\n   \r\n        }\r\n      }\r\n    };\r\n\r\n\r\n\r\n   return (\r\n      <>\r\n         <section className=\"login-content\">\r\n            <Row className=\"m-0 align-items-center bg-white vh-100\">            \r\n               <Col md=\"6\">\r\n                  <Row className=\"justify-content-center\">\r\n                     <Col md=\"10\">\r\n                        <Card className=\"card-transparent shadow-none d-flex justify-content-center mb-0 auth-card\">\r\n                           <Card.Body>\r\n                              <Link to=\"/dashboard\" className=\"navbar-brand d-flex align-items-center mb-3\">\r\n                                 <svg width=\"30\" className=\"text-primary\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <rect x=\"-0.757324\" y=\"19.2427\" width=\"28\" height=\"4\" rx=\"2\" transform=\"rotate(-45 -0.757324 19.2427)\" fill=\"currentColor\"/>\r\n                                    <rect x=\"7.72803\" y=\"27.728\" width=\"28\" height=\"4\" rx=\"2\" transform=\"rotate(-45 7.72803 27.728)\" fill=\"currentColor\"/>\r\n                                    <rect x=\"10.5366\" y=\"16.3945\" width=\"16\" height=\"4\" rx=\"2\" transform=\"rotate(45 10.5366 16.3945)\" fill=\"currentColor\"/>\r\n                                    <rect x=\"10.5562\" y=\"-0.556152\" width=\"28\" height=\"4\" rx=\"2\" transform=\"rotate(45 10.5562 -0.556152)\" fill=\"currentColor\"/>\r\n                                 </svg>\r\n                                 <h4 className=\"logo-title ms-3\">Hope UI</h4>\r\n                              </Link>\r\n                              <h2 className=\"mb-2 text-center\">Sign In</h2>\r\n                              <p className=\"text-center\">Login to stay connected.</p>\r\n                              <Form  onSubmit={(event) => handleSubmit(event)}>\r\n                                 <Row>\r\n                                    <Col lg=\"12\">\r\n                                       <Form.Group className=\"form-group\">\r\n                                          <Form.Label htmlFor=\"email\" className=\"\">Username</Form.Label>\r\n                                          <Form.Control type=\"text\" className=\"\" id=\"email\"   placeholder=\"Username\"\r\n            name=\"username\"\r\n            onChange={(e) => handleChange(e)}\r\n            min=\"3\"/>\r\n                                       </Form.Group >\r\n                                    </Col>\r\n                                    <Col lg=\"12\" className=\"\">\r\n                                       <Form.Group className=\"form-group\">\r\n                                          <Form.Label htmlFor=\"password\" className=\"\">Password</Form.Label>\r\n                                          <Form.Control type=\"password\" className=\"\" id=\"password\"    \r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={(e) => handleChange(e)}/>\r\n                                       </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg=\"12\" className=\"d-flex justify-content-between\">\r\n                                     \r\n                                    </Col>\r\n                                 </Row>\r\n                                 <div className=\"d-flex justify-content-center\">\r\n                                    <Button type=\"submit\" variant=\"btn btn-primary\">Sign In</Button>\r\n                                 </div>\r\n                                \r\n                                 <p className=\"mt-3 text-center\">\r\n                                    Donâ€™t have an account? <Link to=\"/auth/sign-up\" className=\"text-underline\">Click here to sign up.</Link>\r\n                                 </p>\r\n                              </Form>\r\n                           </Card.Body>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n                  <div className=\"sign-bg\">\r\n                     <svg width=\"280\" height=\"230\" viewBox=\"0 0 431 398\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g opacity=\"0.05\">\r\n                        <rect x=\"-157.085\" y=\"193.773\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(-45 -157.085 193.773)\" fill=\"#3B8AFF\"/>\r\n                        <rect x=\"7.46875\" y=\"358.327\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(-45 7.46875 358.327)\" fill=\"#3B8AFF\"/>\r\n                        <rect x=\"61.9355\" y=\"138.545\" width=\"310.286\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(45 61.9355 138.545)\" fill=\"#3B8AFF\"/>\r\n                        <rect x=\"62.3154\" y=\"-190.173\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(45 62.3154 -190.173)\" fill=\"#3B8AFF\"/>\r\n                        </g>\r\n                     </svg>\r\n                  </div>\r\n               </Col>\r\n               <Col md=\"6\" className=\"d-md-block d-none bg-primary p-0 mt-n1 vh-100 overflow-hidden\">\r\n                  <Image src={auth1} className=\"Image-fluid gradient-main animated-scaleX\" alt=\"images\"/>\r\n               </Col>\r\n            </Row>\r\n         </section>\r\n         <ToastContainer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import styled from \"styled-components\";\r\n// import { useNavigate, Link } from \"react-router-dom\";\r\n// import Logo from \"../assets/logo.svg\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import { loginRoute } from \"../utils/APIRoutes\";\r\n\r\n// export default function Login() {\r\n//   const navigate = useNavigate();\r\n//   const [values, setValues] = useState({ username: \"\", password: \"\" });\r\n//   const toastOptions = {\r\n//     position: \"bottom-right\",\r\n//     autoClose: 8000,\r\n//     pauseOnHover: true,\r\n//     draggable: true,\r\n//     theme: \"dark\",\r\n//   };\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n//       navigate(\"/homev\");\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleChange = (event) => {\r\n//     setValues({ ...values, [event.target.name]: event.target.value });\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const { username, password } = values;\r\n//     if (username === \"\") {\r\n//       toast.error(\"Email and Password is required.\", toastOptions);\r\n//       return false;\r\n//     } else if (password === \"\") {\r\n//       toast.error(\"Email and Password is required.\", toastOptions);\r\n//       return false;\r\n//     }\r\n//     return true;\r\n//   };\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     if (validateForm()) {\r\n//       const { username, password } = values;\r\n//       const { data } = await axios.post(loginRoute, {\r\n//         username,\r\n//         password,\r\n//       });\r\n//       if (data.status === false) {\r\n//         toast.error(data.msg, toastOptions);\r\n//       }\r\n//       if (data.status === true) {\r\n//         localStorage.setItem(\r\n//           process.env.REACT_APP_LOCALHOST_KEY,\r\n//           JSON.stringify(data.user)\r\n//         );\r\n\r\n//         navigate(\"/homev\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <FormContainer>\r\n//         <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\r\n//           <div className=\"brand\">\r\n//             <img src={Logo} alt=\"logo\" />\r\n//             <h1>Alchimistic</h1>\r\n//           </div>\r\n//           <input\r\n//             type=\"text\"\r\n            // placeholder=\"Username\"\r\n            // name=\"username\"\r\n            // onChange={(e) => handleChange(e)}\r\n            // min=\"3\"\r\n//           />\r\n//           <input\r\n            // type=\"password\"\r\n            // placeholder=\"Password\"\r\n            // name=\"password\"\r\n            // onChange={(e) => handleChange(e)}\r\n//           />\r\n//           <button type=\"submit\">Log In</button>\r\n//           <span>\r\n//             Don't have an account ? <Link to=\"/register\">Create One.</Link>\r\n//           </span>\r\n//         </form>\r\n//       </FormContainer>\r\n//       <ToastContainer />\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// const FormContainer = styled.div`\r\n//   height: 100vh;\r\n//   width: 100vw;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: center;\r\n//   gap: 1rem;\r\n//   align-items: center;\r\n//   background-color: #131324;\r\n//   .brand {\r\n//     display: flex;\r\n//     align-items: center;\r\n//     gap: 1rem;\r\n//     justify-content: center;\r\n//     img {\r\n//       height: 5rem;\r\n//     }\r\n//     h1 {\r\n//       color: white;\r\n//       text-transform: uppercase;\r\n//     }\r\n//   }\r\n\r\n//   form {\r\n//     display: flex;\r\n//     flex-direction: column;\r\n//     gap: 2rem;\r\n//     background-color: #00000076;\r\n//     border-radius: 2rem;\r\n//     padding: 5rem;\r\n//   }\r\n//   input {\r\n//     background-color: transparent;\r\n//     padding: 1rem;\r\n//     border: 0.1rem solid #4e0eff;\r\n//     border-radius: 0.4rem;\r\n//     color: white;\r\n//     width: 100%;\r\n//     font-size: 1rem;\r\n//     &:focus {\r\n//       border: 0.1rem solid #997af0;\r\n//       outline: none;\r\n//     }\r\n//   }\r\n//   button {\r\n//     background-color: #4e0eff;\r\n//     color: white;\r\n//     padding: 1rem 2rem;\r\n//     border: none;\r\n//     font-weight: bold;\r\n//     cursor: pointer;\r\n//     border-radius: 0.4rem;\r\n//     font-size: 1rem;\r\n//     text-transform: uppercase;\r\n//     &:hover {\r\n//       background-color: #4e0eff;\r\n//     }\r\n//   }\r\n//   span {\r\n//     color: white;\r\n//     text-transform: uppercase;\r\n//     a {\r\n//       color: #4e0eff;\r\n//       text-decoration: none;\r\n//       font-weight: bold;\r\n//     }\r\n//   }\r\n// `;\r\n"],"names":["history","useHistory","useState","JSON","parse","localStorage","getItem","process","username","password","values","setValues","toastOptions","position","autoClose","pauseOnHover","draggable","theme","useEffect","toast","handleChange","event","target","name","value","validateForm","handleSubmit","preventDefault","axios","loginRoute","data","status","msg","setItem","stringify","user","push","className","Row","Col","md","Card","to","width","viewBox","fill","xmlns","x","y","height","rx","transform","Form","onSubmit","lg","htmlFor","type","id","placeholder","onChange","e","min","Button","variant","opacity","Image","src","auth1","alt"],"sourceRoot":""}
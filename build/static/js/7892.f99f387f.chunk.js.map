{"version":3,"file":"static/js/7892.f99f387f.chunk.js","mappings":"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","sources":["components/Card.js","components/Posts/Post.js","../node_modules/react-external-link/dist/index.esm.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => <div className={`card ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header = (props) => <div className={`card-header d-flex justify-content-between ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Body = (props) => <div className={`card-body ${props.className ? props.className :''}`}> {props.children} </div>\r\nCard.Footer = (props) => <div className=\"card-footer\"> {props.children} </div>\r\nCard.Header.Title = (props) => <div className={`header-title ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header.Action = (props) => <div className={`header-action ${props.className ? props.className : ''}`}> {props.children} </div>\r\n\r\nexport default Card;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useNavigate,\r\n  Link,\r\n  BrowserRouter,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport { ExternalLink } from \"react-external-link\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport Card from '../Card'\r\nconst Post = () => {\r\n\r\n\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getproducts();\r\n  }, []);\r\n\r\n  const getproducts = async () => {\r\n    let result = await fetch(\"http://localhost:5005/products\");\r\n    result = await result.json();\r\n    setData(result);\r\n  };\r\n  console.warn(\"results\", data);\r\n\r\n  const deleteproduct = async (id) => {\r\n    let result = await fetch(`http://localhost:5005/products/${id} `, {\r\n      method: \"Delete\",\r\n    });\r\n    result = await result.json();\r\n    if (result) {\r\n      getproducts();\r\n    }\r\n  };\r\n\r\n  // const as = (e) => {\r\n  //     setCurrentId(post._id)\r\n  //     history.push(`/home`);\r\n\r\n  // }\r\n\r\n  // const openPost = (e) => {\r\n  //     // dispatch(getPost(post._id, history));\r\n\r\n  //     history.push(`/posts/${post._id}`);\r\n  // }; const view = (e) => {\r\n  //     // dispatch(getPost(post._id, history));\r\n\r\n  //     history.push(`/singlepost/ + ${post._id}`);\r\n  // }; const update = (e) => {\r\n  //     // dispatch(getPost(post._id, history));\r\n\r\n  //     history.push(`/updatepost/${post._id}`);\r\n  // };\r\n  // const Likes = () => {\r\n  //     if (post.likes.length > 0) {\r\n  //         return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n  //             ? (\r\n  //                 <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`}</>\r\n  //             ) : (\r\n  //                 <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n  //             );\r\n  //     }\r\n\r\n  //     return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n  // };\r\n\r\n  return (\r\n    // <Card className={classes.card}>\r\n    //     <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n    //     <div className={classes.overlay}>\r\n    //         <Typography variant=\"h6\">{post.selectmenu}</Typography>\r\n    //         <Typography variant=\"h6\">{post.asd}</Typography>\r\n    //         <Typography variant=\"h6\">{post.gender}</Typography>\r\n    //     </div>\r\n\r\n    //     <div className={classes.details}>\r\n    //     </div>\r\n    //     <div className={classes.overlay2}>\r\n    //         <Button style={{ color: 'white' }} id=\"myBtn\" size=\"small\" onClick={as}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n    //         <Link to={\"/updatepost/\" + post._id}>UPDATE</Link>\r\n    //     </div>\r\n    //     <CardContent>\r\n    //         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.productname}</Typography>\r\n    //     </CardContent>\r\n    //     <CardActions className={classes.cardActions}>\r\n    //         {/* <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\r\n    //             <Likes />\r\n    //         </Button> */}\r\n\r\n    //         <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deleteProducts(post._id))}>\r\n    //             <DeleteIcon fontSize=\"small\" /> Delete\r\n    //         </Button>\r\n    //         <Button size=\"small\" color=\"secondary\" name=\"test\" className={classes.cardAction}\r\n    //             onClick={openPost}>\r\n    //             <DeleteIcon fontSize=\"small\" /> OPEN\r\n    //             <Link to={\"/singlepost/\" + post._id}>OPEN</Link>\r\n\r\n    //         </Button>\r\n\r\n    //     </CardActions>\r\n\r\n    // </Card>\r\n    // <div className='container'>\r\n    //     <div className='row'>\r\n    //         <div class=\"table-responsive\">\r\n    //             <table class=\"table table-hover\">\r\n    //                 <thead>\r\n    //                     <tr>\r\n    //                         <th scope=\"col\">#</th>\r\n    //                         <th scope=\"col\">NAME</th>\r\n    //                         <th scope=\"col\">SELECTMENU</th>\r\n    //                         <th scope=\"col\">RADIO</th>\r\n    //                         <th scope=\"col\">CHECKBOX</th>\r\n    //                         <th scope=\"col\">FILE</th>\r\n    //                     </tr>\r\n    //                 </thead>\r\n    //                 <tbody>\r\n    //                     <tr>\r\n    //                         <th scope=\"row\">1</th>\r\n    //                         <td>{post.productname}</td>\r\n    //                         <td>{post.selectmenu}</td>\r\n    //                         <td>{post.gender}</td>\r\n    //                         <td>{post.asd}</td>\r\n    //                         {/* <td>{post.selectedFile}</td> */}\r\n    //                         <td><Link to={\"/singlepost/\" + post._id}>VIEW</Link></td>\r\n    //                         <td><Link to={\"/updatepost/\" + post._id}>UPDATE</Link></td>\r\n    //                         <td><Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deleteProducts(post._id))}> <DeleteIcon fontSize=\"small\" /> Delete </Button></td>\r\n    //                     </tr>\r\n    //                 </tbody>\r\n    //             </table>\r\n    //         </div>\r\n    //     </div>\r\n    // </div>\r\n\r\n    // <div>\r\n    // <>\r\n    // <div>\r\n    //   <Row>\r\n    //      <Col sm=\"12\">\r\n    //         <Card>\r\n    //            <Card.Header className=\"d-flex justify-content-between\">\r\n    //               <div className=\"header-title\">\r\n    //               {/* <Link type=\"submit\" name=\"next\" className=\"btn btn-primary next action-button float-end\" value=\"Submit\" onClick={cnp}>Create New</Link> */}\r\n\r\n    //               </div>\r\n    //            </Card.Header>\r\n    //            <Card.Body className=\"px-0\">\r\n    //               <div className=\"table-responsive\">\r\n    //                  <table id=\"user-list-table\" className=\"table table-striped\" role=\"grid\" data-toggle=\"data-table\">\r\n    //                     <thead>\r\n    //                        <tr className=\"ligth\">\r\n    //                           <th>Product Name</th>\r\n    //                           <th>Product Family</th>\r\n    //                           <th>Category</th>\r\n    //                           <th>Category Standard</th>\r\n    //                           <th>Start Date</th>\r\n\r\n    //                           <th min-width= \"100px\">Action</th>\r\n    //                        </tr>\r\n    //                     </thead>\r\n    //                     <tbody>\r\n    //                     {\r\n    //                         data.map((item)=>\r\n    //                        <tr>\r\n    //                           <td>{item.Product_Name}</td>\r\n    //                           <td>-</td>\r\n    //                           <td>{item.Product_Category}</td>\r\n    //                           <td>{item.Applicable_Standards}</td>\r\n    //                           <td>Date</td>\r\n    //                           <td>\r\n    //                              <div className=\"flex align-items-center list-user-action\">\r\n    //                                 <Link className=\"btn btn-sm btn-icon btn-success\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Add\" to=\"#\">\r\n    //                                    <span className=\"btn-inner\">\r\n    //                                       <svg width=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n    //                                          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.87651 15.2063C6.03251 15.2063 2.74951 15.7873 2.74951 18.1153C2.74951 20.4433 6.01251 21.0453 9.87651 21.0453C13.7215 21.0453 17.0035 20.4633 17.0035 18.1363C17.0035 15.8093 13.7415 15.2063 9.87651 15.2063Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.8766 11.886C12.3996 11.886 14.4446 9.841 14.4446 7.318C14.4446 4.795 12.3996 2.75 9.8766 2.75C7.3546 2.75 5.3096 4.795 5.3096 7.318C5.3006 9.832 7.3306 11.877 9.8456 11.886H9.8766Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path d=\"M19.2036 8.66919V12.6792\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path d=\"M21.2497 10.6741H17.1597\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                       </svg>\r\n    //                                    </span>\r\n    //                                 </Link>{' '}\r\n    //                                 <Link className=\"btn btn-sm btn-icon btn-warning\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Edit\" to={\"/updatepost/\" + item._id}>\r\n    //                                    <span className=\"btn-inner\">\r\n    //                                       <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    //                                          <path d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path d=\"M15.1655 4.60254L19.7315 9.16854\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                       </svg>\r\n    //                                    </span>\r\n    //                                 </Link>{' '}\r\n    //                                 <Link className=\"btn btn-sm btn-icon btn-danger\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Delete\" to=\"#\" >\r\n    //                                    <span className=\"btn-inner\">\r\n    //                                       <svg width=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\">\r\n    //                                          <path d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path d=\"M20.708 6.23975H3.75\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                          <path d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n    //                                       </svg>\r\n    //                                    </span>\r\n    //                                 </Link>{' '}\r\n    //                              </div>\r\n    //                           </td>\r\n    //                        </tr>)}\r\n    //                     </tbody>\r\n    //                  </table>\r\n    //               </div>\r\n    //            </Card.Body>\r\n    //         </Card>\r\n    //      </Col>\r\n    //   </Row>\r\n    // </div>\r\n    // </>\r\n    // </div>\r\n\r\n    <>\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Card.Header className=\"d-flex justify-content-between\">\r\n                <div className=\"header-title\">\r\n                  <Link\r\n                    type=\"submit\"\r\n                    name=\"next\"\r\n                    className=\"btn btn-primary next action-button float-end\"\r\n                    to={\"/producthf\"}\r\n                  >\r\n                    Add New Product\r\n                  </Link>\r\n\r\n                  <ExternalLink\r\n                    href=\"https://localhost:5005/add\"\r\n                    className=\"btn btn-primary next action-button float-end\"\r\n                  >\r\n                    <span>Add Bulkproduct</span>\r\n                  </ExternalLink>\r\n                </div>\r\n              </Card.Header>\r\n              <Card.Body className=\"px-0\">\r\n                <div className=\"table-responsive\">\r\n                  <table\r\n                    id=\"user-list-table\"\r\n                    className=\"table table-striped\"\r\n                    role=\"grid\"\r\n                    data-toggle=\"data-table\"\r\n                  >\r\n                    <thead>\r\n                      <tr className=\"ligth\">\r\n                        <th>Product Name</th>\r\n                        <th>Product Family</th>\r\n                        <th>Category</th>\r\n                        <th>Category Standard</th>\r\n                        <th>Start Date</th>\r\n                        {/* <th>Status</th> */}\r\n\r\n                        <th min-width=\"100px\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {data.map((item) => (\r\n                        <tr>\r\n                          <td>{item.Product_Name}</td>\r\n                          <td>-</td>\r\n                          <td>{item.Product_Category}</td>\r\n                          <td>{item.Applicable_Standards}</td>\r\n                          <td>Date</td>\r\n\r\n                          <td>\r\n                            <div className=\"flex align-items-center list-user-action\">\r\n                              <Link\r\n                                className=\"btn btn-sm btn-icon btn-success\"\r\n                                data-toggle=\"tooltip\"\r\n                                data-placement=\"top\"\r\n                                title=\"\"\r\n                                data-original-title=\"Add\"\r\n                                to={\"/singlepost/\" + item._id}\r\n                              >\r\n                                <span className=\"btn-inner\">\r\n                                  <svg\r\n                                    width=\"32\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  >\r\n                                    <path\r\n                                      fillRule=\"evenodd\"\r\n                                      clipRule=\"evenodd\"\r\n                                      d=\"M9.87651 15.2063C6.03251 15.2063 2.74951 15.7873 2.74951 18.1153C2.74951 20.4433 6.01251 21.0453 9.87651 21.0453C13.7215 21.0453 17.0035 20.4633 17.0035 18.1363C17.0035 15.8093 13.7415 15.2063 9.87651 15.2063Z\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      fillRule=\"evenodd\"\r\n                                      clipRule=\"evenodd\"\r\n                                      d=\"M9.8766 11.886C12.3996 11.886 14.4446 9.841 14.4446 7.318C14.4446 4.795 12.3996 2.75 9.8766 2.75C7.3546 2.75 5.3096 4.795 5.3096 7.318C5.3006 9.832 7.3306 11.877 9.8456 11.886H9.8766Z\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M19.2036 8.66919V12.6792\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M21.2497 10.6741H17.1597\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                  </svg>\r\n                                </span>\r\n                              </Link>{\" \"}\r\n                              <Link\r\n                                className=\"btn btn-sm btn-icon btn-warning\"\r\n                                data-toggle=\"tooltip\"\r\n                                data-placement=\"top\"\r\n                                title=\"\"\r\n                                data-original-title=\"Edit\"\r\n                                to={\"/updatepost/\" + item._id}\r\n                              >\r\n                                <span className=\"btn-inner\">\r\n                                  <svg\r\n                                    width=\"20\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  >\r\n                                    <path\r\n                                      d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      fillRule=\"evenodd\"\r\n                                      clipRule=\"evenodd\"\r\n                                      d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M15.1655 4.60254L19.7315 9.16854\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                  </svg>\r\n                                </span>\r\n                              </Link>{\" \"}\r\n                              <Link\r\n                                className=\"btn btn-sm btn-icon btn-danger\"\r\n                                data-toggle=\"tooltip\"\r\n                                data-placement=\"top\"\r\n                                title=\"\"\r\n                                data-original-title=\"Delete\"\r\n                                onClick={() => deleteproduct(item._id)}\r\n                              >\r\n                                <span className=\"btn-inner\">\r\n                                  <svg\r\n                                    width=\"20\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    stroke=\"currentColor\"\r\n                                  >\r\n                                    <path\r\n                                      d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M20.708 6.23975H3.75\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\"\r\n                                      stroke=\"currentColor\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                    ></path>\r\n                                  </svg>\r\n                                </span>\r\n                              </Link>{\" \"}\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar ExternalLink = function (_a) {\n    var href = _a.href, children = _a.children, rest = __rest(_a, [\"href\", \"children\"]);\n    return (React.createElement(\"a\", __assign({ target: \"_blank\", rel: \"noopener noreferrer\", href: href }, rest), children !== null && children !== void 0 ? children : href));\n};\n\nexport { ExternalLink };\n"],"names":["Card","props","className","children","Header","Body","Footer","Title","Action","useState","data","setData","useEffect","getproducts","fetch","result","json","console","warn","deleteproduct","id","method","sm","type","name","to","href","role","map","item","Product_Name","Product_Category","Applicable_Standards","title","_id","width","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onClick","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ExternalLink","_a","rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","React","target","rel"],"sourceRoot":""}
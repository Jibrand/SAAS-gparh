{"version":3,"file":"static/js/2657.1689ca73.chunk.js","mappings":"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","sources":["components/Card.js","views/dashboard/app/user-add.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => <div className={`card ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header = (props) => <div className={`card-header d-flex justify-content-between ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Body = (props) => <div className={`card-body ${props.className ? props.className :''}`}> {props.children} </div>\r\nCard.Footer = (props) => <div className=\"card-footer\"> {props.children} </div>\r\nCard.Header.Title = (props) => <div className={`header-title ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header.Action = (props) => <div className={`header-action ${props.className ? props.className : ''}`}> {props.children} </div>\r\n\r\nexport default Card;","import React, { useState } from 'react'\r\nimport { Row, Col, Image, Form, Button } from 'react-bootstrap'\r\nimport Card from '../../../components/Card'\r\n\r\nimport { Link } from 'react-router-dom'\r\n// img\r\nimport avatars1 from '../../../assets/images/avatars/01.png'\r\nimport avatars2 from '../../../assets/images/avatars/avtar_1.png'\r\nimport avatars3 from '../../../assets/images/avatars/avtar_2.png'\r\nimport avatars4 from '../../../assets/images/avatars/avtar_3.png'\r\nimport avatars5 from '../../../assets/images/avatars/avtar_4.png'\r\nimport avatars6 from '../../../assets/images/avatars/avtar_5.png'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Api } from '../constant/constant';\r\n\r\nconst UserAdd = () => {\r\n   const [email, setEmail] = useState('')\r\n   const [password, setPassword] = useState('')\r\n   const [ConfirmPassword, setConfirmPassword] = useState('')\r\n\r\n   const navigate=useHistory()\r\n   const update = async () => {\r\n      if(password!=ConfirmPassword)\r\n      {toast.error('password and confirm paaword not match')}\r\n      else{\r\n\r\n         let result = await fetch(`http://localhost:5005/api/auth/update`, {\r\n            method: \"Put\",\r\n            body: JSON.stringify({ email, password }),\r\n            headers: { \"Content-Type\": \"Application/json\" },\r\n         })\r\n         if (result) {\r\n            toast.info(\"Updated!\");\r\n            navigate.push('/')\r\n         }\r\n      }\r\n     \r\n   }\r\n\r\n   return (\r\n      <>\r\n         <div>\r\n            <Row>\r\n               <Col xl=\"3\" lg=\"4\" className=\"\">\r\n\r\n               </Col>\r\n               <Col xl=\"12\" lg=\"12\">\r\n                  <Card>\r\n                     <Card.Header className=\"d-flex justify-content-between\">\r\n                        <div className=\"header-title\">\r\n                           {/* <h4 className=\"card-title\">  </h4> */}\r\n                        </div>\r\n                     </Card.Header>\r\n                     <Card.Body>\r\n                        <div className=\"new-user-info\">\r\n                           <form>\r\n\r\n                              <hr />\r\n\r\n                              <div className=\"row\">\r\n                                 <Form.Group className=\"col-md-6 form-group \"autoComplete=\"nope\">\r\n                                    <Form.Label htmlFor=\"uname\">User Name:</Form.Label>\r\n                                    <Form.Control type=\"text\"   disabled defaultValue='Admin' placeholder=\"User Name\" />\r\n                                 </Form.Group>\r\n                                 <Form.Group className=\"col-md-6 form-group\" autoComplete=\"nope\">\r\n                                    <Form.Label htmlFor=\"uname\">Email:</Form.Label>\r\n                                    <Form.Control type=\"email\"  placeholder=\"Email\"  autoComplete=\"nope\"  value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)} />\r\n                                 </Form.Group>\r\n                                 <Form.Group className=\"col-md-6 form-group\" autoComplete=\"off\">\r\n                                    <Form.Label htmlFor=\"pass\">Password:</Form.Label>\r\n                                    <Form.Control type=\"password\"   placeholder=\"Password\"  autoComplete=\"off\" value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}/>\r\n                                 </Form.Group>\r\n                                 <Form.Group className=\"col-md-6 form-group\" autoComplete=\"off\">\r\n                                    <Form.Label htmlFor=\"rpass\">Repeat Password:</Form.Label>\r\n                                    <Form.Control type=\"password\"   placeholder=\"Repeat Password \"  autoComplete=\"nope\"  value={ConfirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                                 </Form.Group>\r\n                              </div>\r\n\r\n                              <Button type=\"button\" variant=\"btn btn-primary\" onClick={update}>Add User</Button>\r\n                           </form>\r\n                        </div>\r\n                     </Card.Body>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n         </div>\r\n         <ToastContainer />\r\n      </>\r\n   )\r\n\r\n}\r\n\r\nexport default UserAdd;"],"names":["Card","props","className","children","Header","Body","Footer","Title","Action","useState","email","setEmail","password","setPassword","ConfirmPassword","setConfirmPassword","navigate","useHistory","update","toast","fetch","method","body","JSON","stringify","headers","push","xl","lg","autoComplete","htmlFor","type","disabled","defaultValue","placeholder","value","onChange","e","target","variant","onClick"],"sourceRoot":""}
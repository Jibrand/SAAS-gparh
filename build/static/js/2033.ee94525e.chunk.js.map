{"version":3,"file":"static/js/2033.ee94525e.chunk.js","mappings":"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","sources":["components/Card.js","views/dashboard/app/Userrfq.js","views/dashboard/constant/constant.js","../node_modules/react-external-link/dist/index.esm.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => <div className={`card ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header = (props) => <div className={`card-header d-flex justify-content-between ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Body = (props) => <div className={`card-body ${props.className ? props.className :''}`}> {props.children} </div>\r\nCard.Footer = (props) => <div className=\"card-footer\"> {props.children} </div>\r\nCard.Header.Title = (props) => <div className={`header-title ${props.className ? props.className : ''}`}> {props.children} </div>\r\nCard.Header.Action = (props) => <div className={`header-action ${props.className ? props.className : ''}`}> {props.children} </div>\r\n\r\nexport default Card;","// // import Card from '../../../components/Card'\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import {\r\n// //   useHistory,\r\n// //   Link,\r\n// //   BrowserRouter,\r\n// //   Route,\r\n// //   Routes,\r\n// //   useParams\r\n// // } from \"react-router-dom\";\r\n// // import { ExternalLink } from \"react-external-link\";\r\n// // import { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n// // // img\r\n// // import shap1 from '../../../assets/images/shapes/01.png'\r\n// // import shap2 from '../../../assets/images/shapes/02.png'\r\n// // import shap3 from '../../../assets/images/shapes/03.png'\r\n// // import shap4 from '../../../assets/images/shapes/04.png'\r\n// // import shap5 from '../../../assets/images/shapes/05.png'\r\n// // import shap6 from '../../../assets/images/shapes/06.png'\r\n\r\n\r\n\r\n// // const UserList =() =>{\r\n   \r\n  \r\n    \r\n//   // useEffect(() => {\r\n//   //   getproductdetail();\r\n//   // }, []);\r\n\r\n//   // const getproductdetail = async () => {\r\n//   //   console.warn(params);\r\n//   //   let result = await fetch(`${Api}userRFQ/${params.id}`);\r\n//   //   result = await result.json();\r\n//   //   setData(result);\r\n//   //   console.warn(result);\r\n//   //   if (data.status == \"Draft\") {\r\n//   //     setcolor(\"badge-danger\");\r\n//   //   }\r\n//   // };\r\n\r\n//   // const navigate = useHistory();\r\n//   // const params = useParams();\r\n//   // const [data, setData] = useState([]);\r\n//   // const [color, setcolor] = useState(\"\");\r\n//   //   const [postData, setPostData] = useState({\r\n//   //       to: \"\",\r\n//   //       from: \"\",\r\n//   //       Dates: \"\",\r\n//   //       vendordetails: \"\",\r\n    \r\n//   //       approver: \"\",\r\n//   //       description: \"\",\r\n//   //       any_other_instructions_for_quoting: \"\",\r\n//   //       statement_for_qualification: \"\",\r\n//   //       status: \"Published\",\r\n//   //     });\r\n  \r\n//   //   const getproducts = async () => {\r\n//   //     let result = await fetch(\"${Api}rfqmanagers\");\r\n//   //     result = await result.json();\r\n//   //     setData(result);\r\n//   //   };\r\n//   //   console.warn(\"results\", data);\r\n  \r\n//   //   const goto = async (id) => {};\r\n//   //   const deleteproduct = async (id) => {\r\n//   //     let result = await fetch(`${Api}rfqmanagers/${id} `, {\r\n//   //       method: \"Delete\",\r\n//   //     });\r\n//   //     result = await result.json();\r\n//   //     if (result) {\r\n//   //       getproducts();\r\n//   //     }\r\n//   //   };\r\n// //   return(\r\n// //     <>\r\n// //     <div>\r\n// //       <Row>\r\n// //         <Col sm=\"12\">\r\n// //           <Card>\r\n// //             <Card.Header className=\"d-flex justify-content-between\">\r\n// //               <div className=\"header-title\">\r\n// //                 {/* <Link\r\n// //                   type=\"submit\"\r\n// //                   name=\"next\"\r\n// //                   className=\"btn btn-primary next action-button float-end\"\r\n// //                   to={\"/rfqform\"}\r\n// //                 >\r\n// //                   Add New RFQ\r\n// //                 </Link> */}\r\n// //               </div>\r\n// //             </Card.Header>\r\n// //             <Card.Body className=\"px-0\">\r\n// //               <div className=\"table-responsive\">\r\n// //                 <table\r\n// //                   id=\"user-list-table\"\r\n// //                   className=\"table table-striped\"\r\n// //                   role=\"grid\"\r\n// //                   data-toggle=\"data-table\"\r\n// //                 >\r\n// //                   <thead>\r\n// //                     <tr className=\"ligth\">\r\n//                       // <th>Name</th>\r\n//                       // <th>Company Name</th>\r\n//                       // <th>Email</th>\r\n//                       // <th>Status</th>\r\n//                       // <th>Work Phone</th>\r\n//                       // <th>Join Date</th>\r\n\r\n// //                       {/* <th>Status</th> */}\r\n\r\n// //                       <th min-width=\"100px\">Action</th>\r\n// //                     </tr>\r\n// //                   </thead>\r\n// //                   <tbody>\r\n// //                     {data.map((item) => (\r\n// //                       <tr>\r\n//                         // <td>\r\n//                         //   <Link to={\"/Userprofile/\" + item._id}>\r\n//                         //     {item.Name}\r\n//                         //   </Link>\r\n//                         // </td>\r\n//                         // <td>{item.Company_Name}</td>\r\n//                         // <Link to={\"/Userprofile/\" + item._id}>\r\n//                         //   <td>{item.to}</td>\r\n//                         // </Link>\r\n\r\n//                         // {/* if({item.status}===\"Draft\")\r\n//                         // { */}\r\n//                         // <td>\r\n//                         //   <span className=\"bade badge-danger\">\r\n//                         //     {item.status}\r\n//                         //   </span>\r\n//                         // </td>\r\n//                         // {/* } */}\r\n//                         // {/* <td>{item.status}</td> */}\r\n//                         // <td>{item.Work_Phone}</td>\r\n//                         // <td>{item.Dates}</td>\r\n//                         // <td>\r\n// //                           <div className=\"flex align-items-center list-user-action\">\r\n// //                             <Link\r\n// //                               className=\"btn btn-sm btn-icon btn-success\"\r\n// //                               data-toggle=\"tooltip\"\r\n// //                               data-placement=\"top\"\r\n// //                               title=\"\"\r\n// //                               data-original-title=\"Add\"\r\n// //                               to={\"/HomeRFQView/\" + item._id}\r\n// //                             >\r\n// //                               <span className=\"btn-inner\">\r\n// //                                 <svg\r\n// //                                   width=\"32\"\r\n// //                                   viewBox=\"0 0 24 24\"\r\n// //                                   fill=\"none\"\r\n// //                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n// //                                 >\r\n// //                                   <path\r\n// //                                     fillRule=\"evenodd\"\r\n// //                                     clipRule=\"evenodd\"\r\n// //                                     d=\"M9.87651 15.2063C6.03251 15.2063 2.74951 15.7873 2.74951 18.1153C2.74951 20.4433 6.01251 21.0453 9.87651 21.0453C13.7215 21.0453 17.0035 20.4633 17.0035 18.1363C17.0035 15.8093 13.7415 15.2063 9.87651 15.2063Z\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     fillRule=\"evenodd\"\r\n// //                                     clipRule=\"evenodd\"\r\n// //                                     d=\"M9.8766 11.886C12.3996 11.886 14.4446 9.841 14.4446 7.318C14.4446 4.795 12.3996 2.75 9.8766 2.75C7.3546 2.75 5.3096 4.795 5.3096 7.318C5.3006 9.832 7.3306 11.877 9.8456 11.886H9.8766Z\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     d=\"M19.2036 8.66919V12.6792\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     d=\"M21.2497 10.6741H17.1597\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                 </svg>\r\n// //                               </span>\r\n// //                             </Link>{\" \"}\r\n// //                             <Link\r\n// //                               className=\"btn btn-sm btn-icon btn-warning\"\r\n// //                               data-toggle=\"tooltip\"\r\n// //                               data-placement=\"top\"\r\n// //                               title=\"\"\r\n// //                               data-original-title=\"Edit\"\r\n// //                               to={\"/HomeRFQUpdate/\" + item._id}\r\n// //                             >\r\n// //                               <span className=\"btn-inner\">\r\n// //                                 <svg\r\n// //                                   width=\"20\"\r\n// //                                   viewBox=\"0 0 24 24\"\r\n// //                                   fill=\"none\"\r\n// //                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n// //                                 >\r\n// //                                   <path\r\n// //                                     d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     fillRule=\"evenodd\"\r\n// //                                     clipRule=\"evenodd\"\r\n// //                                     d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     d=\"M15.1655 4.60254L19.7315 9.16854\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                 </svg>\r\n// //                               </span>\r\n// //                             </Link>{\" \"}\r\n// //                             <Link\r\n// //                               className=\"btn btn-sm btn-icon btn-danger\"\r\n// //                               data-toggle=\"tooltip\"\r\n// //                               data-placement=\"top\"\r\n// //                               title=\"\"\r\n// //                               data-original-title=\"Delete\"\r\n// //                               // onClick={() => deleteproduct(item._id)}\r\n// //                             >\r\n// //                               <span className=\"btn-inner\">\r\n// //                                 <svg\r\n// //                                   width=\"20\"\r\n// //                                   viewBox=\"0 0 24 24\"\r\n// //                                   fill=\"none\"\r\n// //                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n// //                                   stroke=\"currentColor\"\r\n// //                                 >\r\n// //                                   <path\r\n// //                                     d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     d=\"M20.708 6.23975H3.75\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                   <path\r\n// //                                     d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\"\r\n// //                                     stroke=\"currentColor\"\r\n// //                                     strokeWidth=\"1.5\"\r\n// //                                     strokeLinecap=\"round\"\r\n// //                                     strokeLinejoin=\"round\"\r\n// //                                   ></path>\r\n// //                                 </svg>\r\n// //                               </span>\r\n// //                             </Link>{\" \"}\r\n// //                           </div>\r\n// //                         </td>\r\n// //                       </tr>\r\n// //                     ))}\r\n// //                   </tbody>\r\n// //                 </table>\r\n// //               </div>\r\n// //             </Card.Body>\r\n// //           </Card>\r\n// //         </Col>\r\n// //       </Row>\r\n// //     </div>\r\n// //   </>\r\n// //   )\r\n\r\n// // }\r\n\r\n// // export default UserList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import Card from '../../../components/Card'\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   useHistory,\r\n//   Link,\r\n//   BrowserRouter,\r\n//   Route,\r\n//   Routes,\r\n//   useParams\r\n// } from \"react-router-dom\";\r\n// import { ExternalLink } from \"react-external-link\";\r\n// import { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n// // img\r\n// import shap1 from '../../../assets/images/shapes/01.png'\r\n// import shap2 from '../../../assets/images/shapes/02.png'\r\n// import shap3 from '../../../assets/images/shapes/03.png'\r\n// import shap4 from '../../../assets/images/shapes/04.png'\r\n// import shap5 from '../../../assets/images/shapes/05.png'\r\n// import shap6 from '../../../assets/images/shapes/06.png'\r\n\r\n// import styled from 'styled-components';\r\n// import AOS from 'aos'\r\n\r\n// import 'swiper/swiper-bundle.min.css'\r\n// import 'swiper/components/navigation/navigation.scss';\r\n// import { Scrollbars } from 'react-custom-scrollbars';\r\n// const Userrfq =() =>{\r\n  \r\n//   const navigate = useHistory();\r\n//   const params = useParams();\r\n//   const [data, setData] = useState([]);\r\n//   const [color, setcolor] = useState(\"\");\r\n   \r\n    \r\n//   useEffect(() => {\r\n//     getproductdetail();\r\n//   }, []);\r\n//   useEffect(() => {\r\n//     AOS.init();\r\n//  }, [])\r\n//   const getproductdetail = async () => {\r\n//     console.warn(params);\r\n//     let result = await fetch(`${Api}userRFQ/${params.id}`);\r\n//     result = await result.json();\r\n//     setData(result);\r\n//     console.warn(result);\r\n//     if (data.status == \"Draft\") {\r\n//       setcolor(\"badge-danger\");\r\n//     }\r\n//   };\r\n\r\n//     const [postData, setPostData] = useState({\r\n//         to: \"\",\r\n//         from: \"\",\r\n//         Dates: \"\",\r\n//         vendordetails: \"\",\r\n    \r\n//         approver: \"\",\r\n//         description: \"\",\r\n//         any_other_instructions_for_quoting: \"\",\r\n//         statement_for_qualification: \"\",\r\n//         status: \"Published\",\r\n//       });\r\n  \r\n//     const getproducts = async () => {\r\n//       let result = await fetch(\"${Api}rfqmanagers\");\r\n//       result = await result.json();\r\n//       setData(result);\r\n//     };\r\n//     console.warn(\"results\", data);\r\n  \r\n//     const goto = async (id) => {};\r\n//     const deleteproduct = async (id) => {\r\n//       let result = await fetch(`${Api}rfqmanagers/${id} `, {\r\n//         method: \"Delete\",\r\n//       });\r\n//       result = await result.json();\r\n//       if (result) {\r\n//         getproducts();\r\n//       }\r\n//     };\r\n//     const [user, setUser] = useState(JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)));\r\n//      useEffect(async () => {if(! localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) navigate.push('/auth/sign-in') }, []);\r\n//     useEffect(() => {\r\n//       if(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)){\r\n//           if (user.username===\"Admin1\") {navigate.push('/approver')}\r\n//           else if(user.username!==\"Admin\"){navigate.push('/ath')}\r\n//       }\r\n//       else{\r\n//         navigate.push('/auth/sign-in')}},[])\r\n//   return(\r\n//      <>\r\n//        <div className='table-wrapper-scroll-y my-custom-scrollbar'>\r\n//          <Row>\r\n//             <Col sm=\"12\">'\r\n//                <Card>\r\n//                   <Card.Header className=\"d-flex justify-content-between\">\r\n//                      <div className=\"header-title\">\r\n//                         <h4 className=\"card-title\">Vendors List</h4>\r\n//                      </div>\r\n//                   </Card.Header>\r\n//                   <Card.Body className=\"px-0\">\r\n//                      <div className=\"table-responsive\">\r\n//                         <table id=\"user-list-table\" className=\"table table-striped\" role=\"grid\" data-toggle=\"data-table\">\r\n//                            <thead>\r\n//                               <tr className=\"ligth\">\r\n//                               <th>Name</th>\r\n//                       <th>Company Name</th>\r\n//                       <th>Email</th>\r\n//                       <th>Status</th>\r\n//                       <th>Work Phone</th>\r\n//                       <th>Join Date</th>\r\n//                                  <th min-width= \"100px\">Action</th>\r\n//                               </tr>\r\n//                            </thead>\r\n//                            <tbody>\r\n//                            { \r\n//                                data.map((item) => (\r\n//                               <tr>\r\n//                                    <td>\r\n//                           <Link to={\"/dashboard/app/user-profile/\" + item._id}>\r\n//                             {item.Name}\r\n//                           </Link>\r\n//                         </td>\r\n//                         <td>{item.Company_Name}</td>\r\n                \r\n//                           <td>{item.to}</td>\r\n                        \r\n//                         <td>\r\n//                           <span className=\"bade badge-danger\">\r\n//                             {item.status}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>{item.Work_Phone}</td>\r\n//                         <td>{item.Dates}</td>\r\n                               \r\n//                                  <td>\r\n//                                     <div className=\"flex align-items-center list-user-action\">\r\n                                       \r\n//                                     <Link className=\"btn btn-sm btn-icon text-primary flex-end\" data-bs-toggle=\"tooltip\" title=\"Edit User\" to=\"#\"    >\r\n//                                                     <span className=\"btn-inner\">\r\n//                                                         <svg width=\"50\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n//                                                             <path d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n//                                                             <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n//                                                             <path d=\"M15.1655 4.60254L19.7315 9.16854\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n//                                                         </svg>\r\n//                                                     </span>\r\n//                                                 </Link>\r\n//                                                 <Link className=\"btn btn-sm btn-icon text-danger\"  data-bs-toggle=\"tooltip\" title=\"Delete User\" to=\"#\"      >\r\n//                                                     <span className=\"btn-inner\">\r\n//                                                         <svg width=\"50\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\">\r\n//                                                             <path d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n//                                                             <path d=\"M20.708 6.23975H3.75\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n//                                                             <path d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n//                                                         </svg>\r\n//                                                     </span>\r\n//                                                 </Link>\r\n//                                                 <Link className=\"btn btn-sm btn-icon text-secondary flex-end\"  data-bs-toggle=\"tooltip\" title=\"Delete User\" to=\"#\"      >\r\n\r\n//                                           <span className=\"btn-inner\">\r\n//                                           <svg width=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n//                                             <path fillRule  =\"evenodd\" clipRule=\"evenodd\"\r\n//                                                 d=\"M11.9849 15.3462C8.11731 15.3462 4.81445 15.931 4.81445 18.2729C4.81445 20.6148 8.09636 21.2205 11.9849 21.2205C15.8525 21.2205 19.1545 20.6348 19.1545 18.2938C19.1545 15.9529 15.8735 15.3462 11.9849 15.3462Z\"\r\n//                                                 stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n//                                             <path fillRule  =\"evenodd\" clipRule=\"evenodd\"\r\n//                                                 d=\"M11.9849 12.0059C14.523 12.0059 16.5801 9.94779 16.5801 7.40969C16.5801 4.8716 14.523 2.81445 11.9849 2.81445C9.44679 2.81445 7.3887 4.8716 7.3887 7.40969C7.38013 9.93922 9.42394 11.9973 11.9525 12.0059H11.9849Z\"\r\n//                                                 stroke=\"currentColor\" strokeWidth=\"1.42857\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n//                                         </svg>\r\n//                                           </span>\r\n//                                        </Link>{' '}\r\n//                                     </div>\r\n//                                  </td>\r\n//                               </tr>))}\r\n//                            </tbody>\r\n//                         </table>\r\n//                      </div>\r\n//                   </Card.Body>\r\n//                </Card>\r\n//             </Col>\r\n//          </Row>\r\n//       </div>\r\n//      </>\r\n//   )\r\n\r\n// }\r\n\r\n// export default Userrfq;\r\n// import Card from '../../../components/Card'\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   useHistory,\r\n//   Link,\r\n//   BrowserRouter,\r\n//   Route,\r\n//   Routes,\r\n//   useParams\r\n// } from \"react-router-dom\";\r\n// import { ExternalLink } from \"react-external-link\";\r\n// import { Row, Col, Image } from \"react-bootstrap\";\r\n\r\n// // img\r\n// import shap1 from '../../../assets/images/shapes/01.png'\r\n// import shap2 from '../../../assets/images/shapes/02.png'\r\n// import shap3 from '../../../assets/images/shapes/03.png'\r\n// import shap4 from '../../../assets/images/shapes/04.png'\r\n// import shap5 from '../../../assets/images/shapes/05.png'\r\n// import shap6 from '../../../assets/images/shapes/06.png'\r\n\r\n\r\n\r\n// const UserList =() =>{\r\n   \r\n  \r\n    \r\n  // useEffect(() => {\r\n  //   getproductdetail();\r\n  // }, []);\r\n\r\n  // const getproductdetail = async () => {\r\n  //   console.warn(params);\r\n  //   let result = await fetch(`${Api}userRFQ/${params.id}`);\r\n  //   result = await result.json();\r\n  //   setData(result);\r\n  //   console.warn(result);\r\n  //   if (data.status == \"Draft\") {\r\n  //     setcolor(\"badge-danger\");\r\n  //   }\r\n  // };\r\n\r\n  // const navigate = useHistory();\r\n  // const params = useParams();\r\n  // const [data, setData] = useState([]);\r\n  // const [color, setcolor] = useState(\"\");\r\n  //   const [postData, setPostData] = useState({\r\n  //       to: \"\",\r\n  //       from: \"\",\r\n  //       Dates: \"\",\r\n  //       vendordetails: \"\",\r\n    \r\n  //       approver: \"\",\r\n  //       description: \"\",\r\n  //       any_other_instructions_for_quoting: \"\",\r\n  //       statement_for_qualification: \"\",\r\n  //       status: \"Published\",\r\n  //     });\r\n  \r\n  //   const getproducts = async () => {\r\n  //     let result = await fetch(\"${Api}rfqmanagers\");\r\n  //     result = await result.json();\r\n  //     setData(result);\r\n  //   };\r\n  //   console.warn(\"results\", data);\r\n  \r\n  //   const goto = async (id) => {};\r\n  //   const deleteproduct = async (id) => {\r\n  //     let result = await fetch(`${Api}rfqmanagers/${id} `, {\r\n  //       method: \"Delete\",\r\n  //     });\r\n  //     result = await result.json();\r\n  //     if (result) {\r\n  //       getproducts();\r\n  //     }\r\n  //   };\r\n//   return(\r\n//     <>\r\n//     <div>\r\n//       <Row>\r\n//         <Col sm=\"12\">\r\n//           <Card>\r\n//             <Card.Header className=\"d-flex justify-content-between\">\r\n//               <div className=\"header-title\">\r\n//                 {/* <Link\r\n//                   type=\"submit\"\r\n//                   name=\"next\"\r\n//                   className=\"btn btn-primary next action-button float-end\"\r\n//                   to={\"/rfqform\"}\r\n//                 >\r\n//                   Add New RFQ\r\n//                 </Link> */}\r\n//               </div>\r\n//             </Card.Header>\r\n//             <Card.Body className=\"px-0\">\r\n//               <div className=\"table-responsive\">\r\n//                 <table\r\n//                   id=\"user-list-table\"\r\n//                   className=\"table table-striped\"\r\n//                   role=\"grid\"\r\n//                   data-toggle=\"data-table\"\r\n//                 >\r\n//                   <thead>\r\n//                     <tr className=\"ligth\">\r\n                      // <th>Name</th>\r\n                      // <th>Company Name</th>\r\n                      // <th>Email</th>\r\n                      // <th>Status</th>\r\n                      // <th>Work Phone</th>\r\n                      // <th>Join Date</th>\r\n\r\n//                       {/* <th>Status</th> */}\r\n\r\n//                       <th min-width=\"100px\">Action</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {data.map((item) => (\r\n//                       <tr>\r\n                        // <td>\r\n                        //   <Link to={\"/Userprofile/\" + item._id}>\r\n                        //     {item.Name}\r\n                        //   </Link>\r\n                        // </td>\r\n                        // <td>{item.Company_Name}</td>\r\n                        // <Link to={\"/Userprofile/\" + item._id}>\r\n                        //   <td>{item.to}</td>\r\n                        // </Link>\r\n\r\n                        // {/* if({item.status}===\"Draft\")\r\n                        // { */}\r\n                        // <td>\r\n                        //   <span className=\"bade badge-danger\">\r\n                        //     {item.status}\r\n                        //   </span>\r\n                        // </td>\r\n                        // {/* } */}\r\n                        // {/* <td>{item.status}</td> */}\r\n                        // <td>{item.Work_Phone}</td>\r\n                        // <td>{item.Dates}</td>\r\n                        // <td>\r\n//                           <div className=\"flex align-items-center list-user-action\">\r\n//                             <Link\r\n//                               className=\"btn btn-sm btn-icon btn-success\"\r\n//                               data-toggle=\"tooltip\"\r\n//                               data-placement=\"top\"\r\n//                               title=\"\"\r\n//                               data-original-title=\"Add\"\r\n//                               to={\"/HomeRFQView/\" + item._id}\r\n//                             >\r\n//                               <span className=\"btn-inner\">\r\n//                                 <svg\r\n//                                   width=\"32\"\r\n//                                   viewBox=\"0 0 24 24\"\r\n//                                   fill=\"none\"\r\n//                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                 >\r\n//                                   <path\r\n//                                     fillRule=\"evenodd\"\r\n//                                     clipRule=\"evenodd\"\r\n//                                     d=\"M9.87651 15.2063C6.03251 15.2063 2.74951 15.7873 2.74951 18.1153C2.74951 20.4433 6.01251 21.0453 9.87651 21.0453C13.7215 21.0453 17.0035 20.4633 17.0035 18.1363C17.0035 15.8093 13.7415 15.2063 9.87651 15.2063Z\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     fillRule=\"evenodd\"\r\n//                                     clipRule=\"evenodd\"\r\n//                                     d=\"M9.8766 11.886C12.3996 11.886 14.4446 9.841 14.4446 7.318C14.4446 4.795 12.3996 2.75 9.8766 2.75C7.3546 2.75 5.3096 4.795 5.3096 7.318C5.3006 9.832 7.3306 11.877 9.8456 11.886H9.8766Z\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     d=\"M19.2036 8.66919V12.6792\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     d=\"M21.2497 10.6741H17.1597\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                 </svg>\r\n//                               </span>\r\n//                             </Link>{\" \"}\r\n//                             <Link\r\n//                               className=\"btn btn-sm btn-icon btn-warning\"\r\n//                               data-toggle=\"tooltip\"\r\n//                               data-placement=\"top\"\r\n//                               title=\"\"\r\n//                               data-original-title=\"Edit\"\r\n//                               to={\"/HomeRFQUpdate/\" + item._id}\r\n//                             >\r\n//                               <span className=\"btn-inner\">\r\n//                                 <svg\r\n//                                   width=\"20\"\r\n//                                   viewBox=\"0 0 24 24\"\r\n//                                   fill=\"none\"\r\n//                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                 >\r\n//                                   <path\r\n//                                     d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     fillRule=\"evenodd\"\r\n//                                     clipRule=\"evenodd\"\r\n//                                     d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     d=\"M15.1655 4.60254L19.7315 9.16854\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                 </svg>\r\n//                               </span>\r\n//                             </Link>{\" \"}\r\n//                             <Link\r\n//                               className=\"btn btn-sm btn-icon btn-danger\"\r\n//                               data-toggle=\"tooltip\"\r\n//                               data-placement=\"top\"\r\n//                               title=\"\"\r\n//                               data-original-title=\"Delete\"\r\n//                               // onClick={() => deleteproduct(item._id)}\r\n//                             >\r\n//                               <span className=\"btn-inner\">\r\n//                                 <svg\r\n//                                   width=\"20\"\r\n//                                   viewBox=\"0 0 24 24\"\r\n//                                   fill=\"none\"\r\n//                                   xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                   stroke=\"currentColor\"\r\n//                                 >\r\n//                                   <path\r\n//                                     d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     d=\"M20.708 6.23975H3.75\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                   <path\r\n//                                     d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\"\r\n//                                     stroke=\"currentColor\"\r\n//                                     strokeWidth=\"1.5\"\r\n//                                     strokeLinecap=\"round\"\r\n//                                     strokeLinejoin=\"round\"\r\n//                                   ></path>\r\n//                                 </svg>\r\n//                               </span>\r\n//                             </Link>{\" \"}\r\n//                           </div>\r\n//                         </td>\r\n//                       </tr>\r\n//                     ))}\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             </Card.Body>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//   </>\r\n//   )\r\n\r\n// }\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nimport Card from '../../../components/Card'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useHistory,\r\n  Link,\r\n  BrowserRouter,\r\n  Route,\r\n  Routes,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { ExternalLink } from \"react-external-link\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport { Api } from '../constant/constant';\r\n\r\n\r\n// img\r\nimport shap1 from '../../../assets/images/shapes/01.png'\r\nimport shap2 from '../../../assets/images/shapes/02.png'\r\nimport shap3 from '../../../assets/images/shapes/03.png'\r\nimport shap4 from '../../../assets/images/shapes/04.png'\r\nimport shap5 from '../../../assets/images/shapes/05.png'\r\nimport shap6 from '../../../assets/images/shapes/06.png'\r\nimport AOS from 'aos'\r\n \r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst Userrfq =() =>{\r\n  \r\n  const navigate = useHistory();\r\n  const params = useParams();\r\n  const [data, setData] = useState([]);\r\n  const [color, setcolor] = useState(\"\");\r\n  useEffect(() => {\r\n    AOS.init();\r\n }, [])\r\n    \r\n  useEffect(() => {\r\n    getproductdetail();\r\n  }, []);\r\n\r\n  const getproductdetail = async () => {\r\n    console.warn(params);\r\n    let result = await fetch(`${Api}/userRFQ/${params.id}`);\r\n    result = await result.json();\r\n    setData(result);\r\n    console.warn(result);\r\n    if (data.status == \"Draft\") {\r\n      setcolor(\"badge-danger\");\r\n    }\r\n  };\r\n\r\n    const [postData, setPostData] = useState({\r\n        to: \"\",\r\n        from: \"\",\r\n        Dates: \"\",\r\n        vendordetails: \"\",\r\n    \r\n        approver: \"\",\r\n        description: \"\",\r\n        any_other_instructions_for_quoting: \"\",\r\n        statement_for_qualification: \"\",\r\n        status: \"Published\",\r\n      });\r\n  \r\n    const getproducts = async () => {\r\n      let result = await fetch(`${Api}/rfqmanagers`);\r\n      result = await result.json();\r\n      setData(result);\r\n    };\r\n    console.warn(\"results\", data);\r\n   \r\n    const deleteproduct = async (id) => {\r\n      let result = await fetch(`${Api}/userRFQ/${id} `, {\r\n        method: \"Delete\",\r\n      });\r\n      result = await result.json();\r\n      if (result) {\r\n        getproductdetail()\r\n      }\r\n    };\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)));\r\n     useEffect(async () => {if(! localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) navigate.push('/auth/sign-in') }, []);\r\n    useEffect(() => {\r\n      if(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)){\r\n          if (user.username===\"Admin1\") {navigate.push('/approver')}\r\n          else if(user.username!==\"Admin\"){navigate.push('/ath')}\r\n      }\r\n      else{\r\n        navigate.push('/auth/sign-in')}},[])\r\n  return(\r\n     <>\r\n       <div className=' ' data-aos=\"fade-up\"\r\n            data-aos-duration=\"2000\" >\r\n         <Row>\r\n            <Col sm=\"12\">'\r\n               <Card>\r\n                  <Card.Header className=\"d-flex justify-content-between\">\r\n                     <div className=\"header-title\">\r\n                        <h4 className=\"card-title\">Vendors List</h4>\r\n                     </div>\r\n                  </Card.Header>\r\n                  <Card.Body className=\"px-0\">\r\n                  <ScrollBar>\r\n                                       <div className=\"table-responsive\">\r\n                     <Scrollbars style={{ width: 1530, height: 600 }}  >\r\n\r\n                        <table id=\"user-list-table\" className=\"table table-striped\" role=\"grid\" data-toggle=\"data-table\">\r\n                           <thead>\r\n                              <tr className=\"ligth\">\r\n                              <th>Name</th>\r\n                      {/* <th>Company Name</th> */}\r\n                      <th>Email</th>\r\n                      <th>Status</th>\r\n                      {/* <th>Work Phone</th> */}\r\n                      {/* <th>Join Date</th> */}\r\n                                 <th min-width= \"100px\">Action</th>\r\n                              </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                           { \r\n                               data.map((item) => (\r\n                              <tr>\r\n                                   <td>\r\n                          <Link to={\"/dashboard/app/user-profile/\" + item._id}>\r\n                            {item.Name}\r\n                          </Link>\r\n                        </td>\r\n                        {/* <td>{item.Company_Name}</td> */}\r\n                \r\n                          <td>{item.to}</td>\r\n                        \r\n                        <td>\r\n                          <span className=\"bade badge-danger\">\r\n                            {item.status}\r\n                          </span>\r\n                        </td>\r\n                        {/* <td>{item.Work_Phone}</td> */}\r\n                        {/* <td>{item.Dates}</td> */}\r\n                               \r\n                                 <td>\r\n                                    <div className=\"flex align-items-center list-user-action\">\r\n                                       \r\n                                    <Link className=\"btn btn-sm btn-icon text-primary flex-end\" data-bs-toggle=\"tooltip\" title=\"Edit User\" to=\"#\"    >\r\n                                                    <span className=\"btn-inner\">\r\n                                                        <svg width=\"50\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                                                            <path d=\"M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path d=\"M15.1655 4.60254L19.7315 9.16854\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                </Link>\r\n                                                <Link className=\"btn btn-sm btn-icon text-danger\"  data-bs-toggle=\"tooltip\" title=\"Delete User\" to=\"#\"     onClick={() => deleteproduct(item._id)  }  >\r\n                                                    <span className=\"btn-inner\">\r\n                                                        <svg width=\"50\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"currentColor\">\r\n                                                            <path d=\"M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path d=\"M20.708 6.23975H3.75\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                            <path d=\"M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                                                        </svg>\r\n                                                    </span>\r\n                                                </Link>\r\n                                              \r\n                                    </div>\r\n                                 </td>\r\n                              </tr>))}\r\n                           </tbody>\r\n                        </table>\r\n                        </Scrollbars>\r\n                     </div>\r\n                     </ScrollBar>\r\n\r\n                  </Card.Body>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n     </>\r\n  )\r\n\r\n}\r\n\r\nexport default Userrfq;\r\n\r\nconst ScrollBar = styled.div`\r\n\r\n#style-2::-webkit-scrollbar-track\r\n{\r\n\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n\tborder-radius: 10px;\r\n\tbackground-color: #F5F5F5;\r\n}\r\n.box{\r\n\r\n    box-shadow: 0 10px 10px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    .force-overflow\r\n}\r\n{\r\n\tmin-height: 430px;\r\n}\r\n.scrollbar\r\n{\r\n\tmargin-left: 30px;\r\n\tfloat: left;\r\n\theight: 380px;\r\n\twidth: 910px;\r\n \r\n\toverflow-y: scroll;\r\n\toverflow-x: auto;\r\n    overflow-x:auto;\r\n\tmargin-bottom: 35px;\r\n}\r\n\r\n\r\n`","// export const Api = 'https://drab-wrap-jay.cyclic.app';\r\nexport const Api = 'http://54.37.6.229:5005';","import React from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar ExternalLink = function (_a) {\n    var href = _a.href, children = _a.children, rest = __rest(_a, [\"href\", \"children\"]);\n    return (React.createElement(\"a\", __assign({ target: \"_blank\", rel: \"noopener noreferrer\", href: href }, rest), children !== null && children !== void 0 ? children : href));\n};\n\nexport { ExternalLink };\n"],"names":["Card","props","className","children","Header","Body","Footer","Title","Action","navigate","useHistory","params","useParams","useState","data","setData","setcolor","useEffect","AOS","getproductdetail","console","warn","fetch","Api","id","result","json","status","to","from","Dates","vendordetails","approver","description","any_other_instructions_for_quoting","statement_for_qualification","deleteproduct","method","JSON","parse","localStorage","getItem","process","user","push","username","sm","ScrollBar","style","width","height","role","map","item","_id","Name","title","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fillRule","clipRule","onClick","styled","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ExternalLink","_a","href","rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","React","target","rel"],"sourceRoot":""}